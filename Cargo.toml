[workspace]
members = [
  "bin/cli",
  "bin/load-test",
  "bin/node",
  "crates/node",
  "crates/proto",
  "crates/rust-client",
  "crates/web-client",
]
resolver = "2"

[workspace.package]
authors      = ["Miden contributors"]
edition      = "2024"
exclude      = [".github/"]
homepage     = "https://miden.xyz"
license      = "MIT"
readme       = "README.md"
repository   = "https://github.com/0xMiden/miden-private-transport"
rust-version = "1.87"
version      = "0.1.0"

[workspace.dependencies]
# Workspace crates (path-based dependencies)
miden-private-transport-client = { default-features = false, path = "crates/rust-client", version = "0.1" }
miden-private-transport-node   = { path = "crates/node", version = "0.1" }
miden-private-transport-proto  = { default-features = false, path = "crates/proto", version = "0.1" }

# miden-base aka protocol dependencies (git = "https://github.com/0xMiden/miden-base"). These should be updated in sync.
miden-objects = { default-features = false, version = "0.11.1" }

# Other miden dependencies. These should align with those expected by miden-base.
miden-client  = { default-features = false, version = "0.11.1" }
miden-lib     = { default-features = false, version = "0.11.1" }
miden-testing = { default-features = false, version = "0.11.1" }

# External dependencies
anyhow = { default-features = false, version = "1.0" }
async-trait = { version = "0.1" }
base64 = { version = "0.22" }
chrono = { features = ["serde"], version = "0.4" }
clap = { features = ["derive"], version = "4.5" }
futures = { version = "0.3" }
hex = { version = "0.4" }
opentelemetry = { version = "0.30" }
opentelemetry-otlp = { default-features = false, features = [
  "grpc-tonic",
  "metrics",
  "tls-roots",
  "trace",
], version = "0.30" }
opentelemetry_sdk = { features = ["metrics", "rt-tokio", "testing"], version = "0.30" }
prost-types = { default-features = false, version = "0.13" }
rand = { version = "0.9" }
serde = { features = ["derive"], version = "1.0" }
serde_json = { version = "1.0" }
serial_test = { version = "3.2" }
sqlx = { features = ["runtime-tokio-rustls", "sqlite"], version = "0.8" }
thiserror = { default-features = false, version = "2.0" }
tokio = { features = ["macros", "net", "rt-multi-thread"], version = "1.47" }
tonic = { default-features = false, version = "0.13" }
tonic-health = { version = "0.13" }
tonic-web = { version = "0.13" }
tower = { version = "0.5" }
tower-http = { features = ["cors"], version = "0.6" }
tracing = { version = "0.1" }
tracing-opentelemetry = { version = "0.31" }
tracing-subscriber = { features = ["env-filter", "fmt", "json"], version = "0.3" }
wasm-bindgen = { features = ["serde-serialize"], version = "0.2" }
wasm-bindgen-futures = { version = "0.4" }
web-sys = { features = ["console"], version = "0.3" }

# Web-specific dependencies
js-sys             = { version = "0.3" }
serde-wasm-bindgen = { version = "0.6" }

# Lints are set to warn for development, which are promoted to errors in CI.
[workspace.lints.clippy]
# Pedantic lints are set to a lower priority which allows lints in the group to be selectively enabled.
pedantic = { level = "warn", priority = -1 }

cast_possible_truncation    = "allow" # Overly many instances especially regarding indices.
ignored_unit_patterns       = "allow" # Stylistic choice.
large_types_passed_by_value = "allow" # Triggered by BlockHeader being Copy + 334 bytes.
missing_errors_doc          = "allow" # TODO: fixup and enable this.
missing_panics_doc          = "allow" # TODO: fixup and enable this.
module_name_repetitions     = "allow" # Many triggers, and is a stylistic choice.
must_use_candidate          = "allow" # This marks many fn's which isn't helpful.
should_panic_without_expect = "allow" # We don't care about the specific panic message.
# End of pedantic lints.
