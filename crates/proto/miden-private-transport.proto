syntax = "proto3";

package miden_private_transport;

import "google/protobuf/timestamp.proto";
import "google/protobuf/empty.proto";
import "types/note.proto";

// A Note exchanged over the Transport Layer.
// Includes the full header for NoteId, NoteTag access.
message TransportNote {
    // NoteHeader
    bytes header = 1;
    // NoteDetails, can be encrypted
    bytes details = 2;
}

message TransportNotePg {
    // Note
    TransportNote note = 1;
    // Transport Layer pagination
    fixed64 cursor = 2;
}

// API request for sending a note
message SendNoteRequest {
    TransportNote note = 1;
}

// API response for sending a note
message SendNoteResponse { }

// API request for fetching notes
message FetchNotesRequest {
    fixed32 tag = 1;
    fixed64 cursor = 2;
}

// API response for fetching notes
message FetchNotesResponse {
    repeated TransportNotePg notes = 1;
}

// API request for streaming notes
message StreamNotesRequest {
    fixed32 tag = 1;
    fixed64 cursor = 2;
}

// API response for streaming notes updates
message StreamNotesUpdate {
    repeated TransportNotePg notes = 1;
}

// Server statistics
message StatsResponse {
    uint64 total_notes = 1;
    uint64 total_tags = 2;
    repeated TagStats notes_per_tag = 3;
}

// Statistics for a specific tag
message TagStats {
    fixed32 tag = 1;
    uint64 note_count = 2;
    google.protobuf.Timestamp last_activity = 3;
}

// gRPC service definition
service MidenPrivateTransport {
    // Send a note to the server
    rpc SendNote(SendNoteRequest) returns (SendNoteResponse);
    
    // Fetch notes for a specific tag
    rpc FetchNotes(FetchNotesRequest) returns (FetchNotesResponse);

    // Stream notes for a specific tag
    rpc StreamNotes(StreamNotesRequest) returns (stream StreamNotesUpdate);
    
    // Get server statistics
    rpc Stats(google.protobuf.Empty) returns (StatsResponse);
} 
